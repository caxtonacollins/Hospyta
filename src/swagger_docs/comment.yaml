openapi: 3.0.1
info:
  title: Comment API
  version: 1.0.0
  description: API documentation for managing comments
tags:
  - name: Comments
    description: Operations related to comments
paths:
  /comment/{postId}:
    post:
      tags:
        - Comments
      summary: Add a new comment to a post
      parameters:
        - in: path
          name: postId
          required: true
          schema:
            type: string
          description: ID of the post to comment on
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCommentRequest'
      responses:
        '201':
          description: Comment added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '401':
          description: Unauthorized
        '404':
          description: Post not found
        '500':
          description: Internal server error

    get:
      tags:
        - Comments
      summary: Get comments for a post
      parameters:
        - in: path
          name: postId
          required: true
          schema:
            type: string
          description: ID of the post to get comments for
      responses:
        '200':
          description: Comments retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        '500':
          description: Internal server error

  /comment/reply/{commentId}:
    post:
      tags:
        - Comments
      summary: Reply to a comment
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            type: string
          description: ID of the comment to reply to
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplyCommentRequest'
      responses:
        '201':
          description: Reply added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '404':
          description: Comment not found
        '500':
          description: Internal server error

  /comment/likeOrDislikeComment/{commentId}:
    post:
      tags:
        - Comments
      summary: Like or dislike a comment
      parameters:
        - in: path
          name: commentId
          required: true
          schema:
            type: string
          description: ID of the comment to like or dislike
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LikeDislikeRequest'
      responses:
        '200':
          description: Comment vote status updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: Invalid action
        '404':
          description: Comment not found
        '500':
          description: Internal server error

components:
  schemas:
    AddCommentRequest:
      type: object
      required:
        - content
      properties:
        content:
          type: string
          description: Content of the comment

    ReplyCommentRequest:
      type: object
      required:
        - content
      properties:
        content:
          type: string
          description: Content of the reply

    LikeDislikeRequest:
      type: object
      required:
        - action
      properties:
        action:
          type: string
          enum: [like, dislike]
          description: Action to perform (like or dislike)

    Comment:
      type: object
      properties:
        _id:
          type: string
        post:
          type: string
        user:
          type: string
        content:
          type: string
        replies:
          type: array
          items:
            type: string
        likes:
          type: array
          items:
            type: string
        dislikes:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
