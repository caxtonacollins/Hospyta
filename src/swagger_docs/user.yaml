openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
  description: API for managing users

tags:
  - name: User
    description: User management endpoints

components:
  schemas:
    User:
      type: object
      properties:
        profilePicture:
          type: string
          description: URL of the user's profile picture
        firstName:
          type: string
          description: First name of the user
        lastName:
          type: string
          description: Last name of the user
        userName:
          type: string
          description: Unique username for the user
        email:
          type: string
          description: Unique email address of the user
        number:
          type: string
          description: Phone number of the user
        password:
          type: string
          description: User's password
        verified:
          type: boolean
          default: false
          description: Indicates if the user has verified their account
        verificationOTP:
          type: integer
          description: OTP for user verification
        otpCreationTime:
          type: string
          format: date-time
          description: Time at which OTP was created
        role:
          type: string
          enum: [user, admin]
          default: user
          description: Role of the user (user or admin)

paths:
  /user:
    get:
      tags:
        - User
      summary: Retrieve all users
      responses:
        200:
          description: A list of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'

  /user/{id}:
    get:
      tags:
        - User
      summary: Retrieve a user by ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user to retrieve
          schema:
            type: string
      responses:
        200:
          description: User details
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/User'
        404:
          description: User not found

    patch:
      tags:
        - User
      summary: Update a user by ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user to update
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                profilePicture:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                userName:
                  type: string
                email:
                  type: string
                number:
                  type: string
                verified:
                  type: boolean
                role:
                  type: string
                  enum: [user, admin]
      responses:
        200:
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  data:
                    $ref: '#/components/schemas/User'
        400:
          description: Authentication required to update or set password

    delete:
      tags:
        - User
      summary: Delete a user by ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user to delete
          schema:
            type: string
      responses:
        200:
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: boolean
                  message:
                    type: string
